package tns.model.EO;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 18 14:34:18 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EO_ClientsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ClientId {
            public Object get(EO_ClientsImpl obj) {
                return obj.getClientId();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setClientId((DBSequence)value);
            }
        }
        ,
        ClientNo {
            public Object get(EO_ClientsImpl obj) {
                return obj.getClientNo();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setClientNo((DBSequence)value);
            }
        }
        ,
        ClientType {
            public Object get(EO_ClientsImpl obj) {
                return obj.getClientType();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setClientType((String)value);
            }
        }
        ,
        ClientName {
            public Object get(EO_ClientsImpl obj) {
                return obj.getClientName();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setClientName((String)value);
            }
        }
        ,
        AddressLine1 {
            public Object get(EO_ClientsImpl obj) {
                return obj.getAddressLine1();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setAddressLine1((String)value);
            }
        }
        ,
        AddressLine2 {
            public Object get(EO_ClientsImpl obj) {
                return obj.getAddressLine2();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setAddressLine2((String)value);
            }
        }
        ,
        City {
            public Object get(EO_ClientsImpl obj) {
                return obj.getCity();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setCity((String)value);
            }
        }
        ,
        Country {
            public Object get(EO_ClientsImpl obj) {
                return obj.getCountry();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        ZipCode {
            public Object get(EO_ClientsImpl obj) {
                return obj.getZipCode();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setZipCode((Number)value);
            }
        }
        ,
        PhoneNo {
            public Object get(EO_ClientsImpl obj) {
                return obj.getPhoneNo();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setPhoneNo((String)value);
            }
        }
        ,
        MobileNo {
            public Object get(EO_ClientsImpl obj) {
                return obj.getMobileNo();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setMobileNo((String)value);
            }
        }
        ,
        EmailAddress {
            public Object get(EO_ClientsImpl obj) {
                return obj.getEmailAddress();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        NtnNo {
            public Object get(EO_ClientsImpl obj) {
                return obj.getNtnNo();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setNtnNo((String)value);
            }
        }
        ,
        CnicNo {
            public Object get(EO_ClientsImpl obj) {
                return obj.getCnicNo();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setCnicNo((String)value);
            }
        }
        ,
        FederalTaxPayerId {
            public Object get(EO_ClientsImpl obj) {
                return obj.getFederalTaxPayerId();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setFederalTaxPayerId((Number)value);
            }
        }
        ,
        ProvincialTaxPayerId {
            public Object get(EO_ClientsImpl obj) {
                return obj.getProvincialTaxPayerId();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setProvincialTaxPayerId((Number)value);
            }
        }
        ,
        CustomerId {
            public Object get(EO_ClientsImpl obj) {
                return obj.getCustomerId();
            }

            public void put(EO_ClientsImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(EO_ClientsImpl object);

        public abstract void put(EO_ClientsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLIENTID = AttributesEnum.ClientId.index();
    public static final int CLIENTNO = AttributesEnum.ClientNo.index();
    public static final int CLIENTTYPE = AttributesEnum.ClientType.index();
    public static final int CLIENTNAME = AttributesEnum.ClientName.index();
    public static final int ADDRESSLINE1 = AttributesEnum.AddressLine1.index();
    public static final int ADDRESSLINE2 = AttributesEnum.AddressLine2.index();
    public static final int CITY = AttributesEnum.City.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int ZIPCODE = AttributesEnum.ZipCode.index();
    public static final int PHONENO = AttributesEnum.PhoneNo.index();
    public static final int MOBILENO = AttributesEnum.MobileNo.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int NTNNO = AttributesEnum.NtnNo.index();
    public static final int CNICNO = AttributesEnum.CnicNo.index();
    public static final int FEDERALTAXPAYERID = AttributesEnum.FederalTaxPayerId.index();
    public static final int PROVINCIALTAXPAYERID = AttributesEnum.ProvincialTaxPayerId.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EO_ClientsImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("tns.model.EO.EO_Clients");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ClientId, using the alias name ClientId.
     * @return the ClientId
     */
    public DBSequence getClientId() {
        return (DBSequence)getAttributeInternal(CLIENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientId.
     * @param value value to set the ClientId
     */
    public void setClientId(DBSequence value) {
        setAttributeInternal(CLIENTID, value);
    }

    /**
     * Gets the attribute value for ClientNo, using the alias name ClientNo.
     * @return the ClientNo
     */
    public DBSequence getClientNo() {
        return (DBSequence)getAttributeInternal(CLIENTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientNo.
     * @param value value to set the ClientNo
     */
    public void setClientNo(DBSequence value) {
        setAttributeInternal(CLIENTNO, value);
    }

    /**
     * Gets the attribute value for ClientType, using the alias name ClientType.
     * @return the ClientType
     */
    public String getClientType() {
        return (String)getAttributeInternal(CLIENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientType.
     * @param value value to set the ClientType
     */
    public void setClientType(String value) {
        setAttributeInternal(CLIENTTYPE, value);
    }

    /**
     * Gets the attribute value for ClientName, using the alias name ClientName.
     * @return the ClientName
     */
    public String getClientName() {
        return (String)getAttributeInternal(CLIENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientName.
     * @param value value to set the ClientName
     */
    public void setClientName(String value) {
        setAttributeInternal(CLIENTNAME, value);
    }

    /**
     * Gets the attribute value for AddressLine1, using the alias name AddressLine1.
     * @return the AddressLine1
     */
    public String getAddressLine1() {
        return (String)getAttributeInternal(ADDRESSLINE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddressLine1.
     * @param value value to set the AddressLine1
     */
    public void setAddressLine1(String value) {
        setAttributeInternal(ADDRESSLINE1, value);
    }

    /**
     * Gets the attribute value for AddressLine2, using the alias name AddressLine2.
     * @return the AddressLine2
     */
    public String getAddressLine2() {
        return (String)getAttributeInternal(ADDRESSLINE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddressLine2.
     * @param value value to set the AddressLine2
     */
    public void setAddressLine2(String value) {
        setAttributeInternal(ADDRESSLINE2, value);
    }

    /**
     * Gets the attribute value for City, using the alias name City.
     * @return the City
     */
    public String getCity() {
        return (String)getAttributeInternal(CITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for City.
     * @param value value to set the City
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**
     * Gets the attribute value for Country, using the alias name Country.
     * @return the Country
     */
    public String getCountry() {
        return (String)getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Country.
     * @param value value to set the Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for ZipCode, using the alias name ZipCode.
     * @return the ZipCode
     */
    public Number getZipCode() {
        return (Number)getAttributeInternal(ZIPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZipCode.
     * @param value value to set the ZipCode
     */
    public void setZipCode(Number value) {
        setAttributeInternal(ZIPCODE, value);
    }

    /**
     * Gets the attribute value for PhoneNo, using the alias name PhoneNo.
     * @return the PhoneNo
     */
    public String getPhoneNo() {
        return (String)getAttributeInternal(PHONENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhoneNo.
     * @param value value to set the PhoneNo
     */
    public void setPhoneNo(String value) {
        setAttributeInternal(PHONENO, value);
    }

    /**
     * Gets the attribute value for MobileNo, using the alias name MobileNo.
     * @return the MobileNo
     */
    public String getMobileNo() {
        return (String)getAttributeInternal(MOBILENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for MobileNo.
     * @param value value to set the MobileNo
     */
    public void setMobileNo(String value) {
        setAttributeInternal(MOBILENO, value);
    }

    /**
     * Gets the attribute value for EmailAddress, using the alias name EmailAddress.
     * @return the EmailAddress
     */
    public String getEmailAddress() {
        return (String)getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailAddress.
     * @param value value to set the EmailAddress
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for NtnNo, using the alias name NtnNo.
     * @return the NtnNo
     */
    public String getNtnNo() {
        return (String)getAttributeInternal(NTNNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for NtnNo.
     * @param value value to set the NtnNo
     */
    public void setNtnNo(String value) {
        setAttributeInternal(NTNNO, value);
    }

    /**
     * Gets the attribute value for CnicNo, using the alias name CnicNo.
     * @return the CnicNo
     */
    public String getCnicNo() {
        return (String)getAttributeInternal(CNICNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CnicNo.
     * @param value value to set the CnicNo
     */
    public void setCnicNo(String value) {
        setAttributeInternal(CNICNO, value);
    }

    /**
     * Gets the attribute value for FederalTaxPayerId, using the alias name FederalTaxPayerId.
     * @return the FederalTaxPayerId
     */
    public Number getFederalTaxPayerId() {
        return (Number)getAttributeInternal(FEDERALTAXPAYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FederalTaxPayerId.
     * @param value value to set the FederalTaxPayerId
     */
    public void setFederalTaxPayerId(Number value) {
        setAttributeInternal(FEDERALTAXPAYERID, value);
    }

    /**
     * Gets the attribute value for ProvincialTaxPayerId, using the alias name ProvincialTaxPayerId.
     * @return the ProvincialTaxPayerId
     */
    public Number getProvincialTaxPayerId() {
        return (Number)getAttributeInternal(PROVINCIALTAXPAYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProvincialTaxPayerId.
     * @param value value to set the ProvincialTaxPayerId
     */
    public void setProvincialTaxPayerId(Number value) {
        setAttributeInternal(PROVINCIALTAXPAYERID, value);
    }

    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number)getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param clientId key constituent
     * @param clientNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence clientId,
                                       DBSequence clientNo) {
        return new Key(new Object[]{clientId, clientNo});
    }


}
